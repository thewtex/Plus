#
# This module is provided as PLUSLIB_USE_FILE 
# It can be INCLUDEd in a project to load the needed compiler and linker
# settings to use Plus library.
#

IF(NOT PLUSLIB_USE_FILE_INCLUDED)
  SET(PLUSLIB_USE_FILE_INCLUDED 1)
  
  CMAKE_POLICY(PUSH)
  CMAKE_POLICY(SET CMP0012 NEW) # if() recognizes numbers and boolean constants
  
  ## Set Plus binary dir path 
  SET(PLUSLIB_DIR "@PlusLib_BINARY_DIR@" )
  
  ## Set Plus source dir path 
  SET(PLUSLIB_SOURCE_DIR "@PlusLib_SOURCE_DIR@" )
  
  ## Set Plus executable output path 
  SET(PLUS_EXECUTABLE_OUTPUT_PATH "@PLUS_EXECUTABLE_OUTPUT_PATH@" )
    
  ## Set Plus scripts folder path 
  SET(PLUSLIB_SCRIPTS_DIR "@PLUSLIB_SCRIPTS_DIR@" )
  
  ## Set gnuplot binary dir path 
  SET(GNUPLOT_BIN_DIR "@GNUPLOT_BIN_DIR@" )
  
  ## Set Sikuli binary dir path 
  SET(SIKULI_BIN_DIR "@SIKULI_BIN_DIR@" )

  ## Find ITK 
  FIND_PACKAGE(ITK PATHS "@ITK_DIR@" NO_DEFAULT_PATH)
  IF (ITK_FOUND)
    INCLUDE("@ITK_USE_FILE@")
  ELSE (ITK_FOUND)
    MESSAGE(FATAL_ERROR "Please set ITK.")
  ENDIF (ITK_FOUND)

  ## Find VTK 
  FIND_PACKAGE(VTK PATHS "@VTK_DIR@" NO_DEFAULT_PATH)
  IF (VTK_FOUND)
    INCLUDE("@VTK_USE_FILE@")
  ELSE (VTK_FOUND)
    MESSAGE(FATAL_ERROR "Please set VTK.")
  ENDIF (VTK_FOUND)
  
  SET(PLUS_USE_OpenIGTLink @PLUS_USE_OpenIGTLink@)
  IF(PLUS_USE_OpenIGTLink)
    FIND_PACKAGE(OpenIGTLink PATHS "@OpenIGTLink_DIR@" NO_DEFAULT_PATH)
    IF (OpenIGTLink_USE_FILE)
      INCLUDE ("@OpenIGTLink_USE_FILE@")
    ELSE (OpenIGTLink_USE_FILE)
      MESSAGE( FATAL_ERROR "Please set OpenIGTLink.")
    ENDIF (OpenIGTLink_USE_FILE)
  ENDIF(PLUS_USE_OpenIGTLink) 
  
  SET(PLUS_USE_SLICER @PLUS_USE_SLICER@)
  IF(PLUS_USE_SLICER)
    SET(SLICER_BIN_DIRECTORY "@SLICER_BIN_DIRECTORY@")
  ENDIF(PLUS_USE_SLICER)

  # Add include directories needed to use PlusLib library 
  # Use a temporary CMake variable to store the list of directory paths
  # (it is required because this way directory names
  # that do not contain space and those that do contain space
  # work equally well).
  SET(PLUSLIB_INCLUDE_DIRS_TEMP "@PLUSLIB_INCLUDE_DIRS@")
  INCLUDE_DIRECTORIES(${PLUSLIB_INCLUDE_DIRS_TEMP})
  
  # Add link directories needed to use Plus library
  # Use a temporary CMake variable to store the list of directory paths
  # (it is required because this way directory names
  # that do not contain space and those that do contain space
  # work equally well).
  SET(PLUSLIB_LIBRARY_DIRS_TEMP "@PLUSLIB_LIBRARY_DIRS@")
  LINK_DIRECTORIES(${PLUSLIB_LIBRARY_DIRS_TEMP})
  
  SET(PLUSLIB_BUILD_SHARED_LIBS @BUILD_SHARED_LIBS@)
  
  SET(QT_QMAKE_EXECUTABLE "@QT_QMAKE_EXECUTABLE@")
  
  ## Find SVN 
  SET (SVN_FOUND @Subversion_FOUND@)
  IF ( SVN_FOUND )
    SET( Subversion_SVN_EXECUTABLE "@PLUSLIB_SVN_EXECUTABLE@" CACHE INTERNAL "")
  ENDIF (SVN_FOUND)
  
  ## Set Plus version 
  SET(PLUSLIB_VERSION "@PLUSLIB_VERSION@")
  SET(PLUSLIB_VERSION_MAJOR @PLUSLIB_VERSION_MAJOR@)
  SET(PLUSLIB_VERSION_MINOR @PLUSLIB_VERSION_MINOR@)
  SET(PLUSLIB_VERSION_PATCH @PLUSLIB_VERSION_PATCH@)
  SET(PLUS_ULTRASONIX_SDK_MAJOR_VERSION @PLUS_ULTRASONIX_SDK_MAJOR_VERSION@)
  SET(PLUS_ULTRASONIX_SDK_MINOR_VERSION @PLUS_ULTRASONIX_SDK_MINOR_VERSION@)
  SET(PLUS_ULTRASONIX_SDK_PATCH_VERSION @PLUS_ULTRASONIX_SDK_PATCH_VERSION@)
  
  ## Set third party lib path variables
  SET(ICCAPTURING_BIN_DIR "@ICCAPTURING_BIN_DIR@")
  SET(NDIOAPI_BINARY_DIR "@NDIOAPI_BINARY_DIR@")
  SET(ULTRASONIX_SDK_BINARY_DIR "@ULTRASONIX_SDK_BINARY_DIR@")
  SET(ATC_TRAKSTAR_BINARY_DIR "@ATC_TRAKSTAR_BINARY_DIR@")
  SET(USDIGITAL_SEI_BINARY_DIR "@USDIGITAL_SEI_BINARY_DIR@")
  
  ## Set Plus use variables
  
  SET(PLUS_USE_3dConnexion_TRACKER @PLUS_USE_3dConnexion_TRACKER@)
  SET(PLUS_USE_Ascension3DG @PLUS_USE_Ascension3DG@)
  SET(PLUS_USE_Ascension3DGm @PLUS_USE_Ascension3DGm@)
  SET(PLUS_USE_BKPROFOCUS_CAMERALINK @PLUS_USE_BKPROFOCUS_CAMERALINK@)
  SET(PLUS_USE_BKPROFOCUS_VIDEO @PLUS_USE_BKPROFOCUS_VIDEO@)
  SET(PLUS_TEST_BKPROFOCUS @PLUS_TEST_BKPROFOCUS@)
  SET(PLUS_USE_BRACHY_TRACKER @PLUS_USE_BRACHY_TRACKER@)
  SET(PLUS_USE_CERTUS @PLUS_USE_CERTUS@)
  SET(PLUS_USE_EPIPHAN @PLUS_USE_EPIPHAN@)
  SET(PLUS_USE_HEARTSIGNALBOX @PLUS_USE_HEARTSIGNALBOX@)
  SET(PLUS_USE_ICCAPTURING_VIDEO @PLUS_USE_ICCAPTURING_VIDEO@)
  SET(PLUS_USE_MICRONTRACKER @PLUS_USE_MICRONTRACKER@)
  SET(PLUS_USE_MMF_VIDEO @PLUS_USE_MMF_VIDEO@)
  SET(PLUS_USE_PHIDGET_SPATIAL_TRACKER @PLUS_USE_PHIDGET_SPATIAL_TRACKER@)
  SET(PLUS_USE_POLARIS @PLUS_USE_POLARIS@)
  SET(PLUS_USE_ULTRASONIX_VIDEO @PLUS_USE_ULTRASONIX_VIDEO@)  
  SET(PLUS_USE_USBECGBOX @PLUS_USE_USBECGBOX@)
  SET(PLUS_USE_VFW_VIDEO @PLUS_USE_VFW_VIDEO@)
  SET(PLUS_USE_StealthLink2 @PLUS_USE_StealthLink2@)
  
  SET(PLUSLIB_DEPENDENCIES @PLUSLIB_DEPENDENCIES@ )
  
  macro(INCLUDE_PLUSLIB_MS_PROJECTS)
    IF ( ${CMAKE_GENERATOR} MATCHES "Visual Studio 9" )
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkPlusCommon@)
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkSignaling@)                  
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkUsSimulatorAlgo@)                  
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkRfProcessingAlgo@)
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkDataCollection@)
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkCalibrationAlgo@)
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_PatternLocAlgo@)
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkVolumeReconstruction@)
      INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkxio@)
      IF (@PLUS_USE_POLARIS@)
        INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkndicapi@)
      ENDIF()
      IF (@PLUS_USE_MICRONTRACKER@)
        INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkMicronTrackerInterface@)
      ENDIF()
      IF (@PLUS_USE_OpenIGTLink@)
        INCLUDE_EXTERNAL_MSPROJECT(@vcProj_vtkPlusOpenIGTLink@)
      ENDIF()
	  IF (@PLUS_USE_MMF_VIDEO@)
        INCLUDE_EXTERNAL_MSPROJECT(@vcProj_MfVideoCaptureLibrary@)
      ENDIF()
    ENDIF ()
  endmacro()

  SET(DOXYGEN_EXECUTABLE "@DOXYGEN_EXECUTABLE@")
  SET(DOXYGEN_DOT_EXECUTABLE "@DOXYGEN_DOT_EXECUTABLE@")
  SET(DOXYGEN_HHC_EXECUTABLE "@DOXYGEN_HHC_EXECUTABLE@")
  
  CMAKE_POLICY(POP)
  
ENDIF(NOT PLUSLIB_USE_FILE_INCLUDED)
